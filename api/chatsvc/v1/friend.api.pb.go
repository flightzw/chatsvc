// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: chatsvc/v1/friend.api.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Nickname  string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Gender    int32  `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Signature string `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	IsOnline  bool   `protobuf:"varint,8,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Remark    string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *FriendVO) Reset() {
	*x = FriendVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendVO) ProtoMessage() {}

func (x *FriendVO) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendVO.ProtoReflect.Descriptor instead.
func (*FriendVO) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{0}
}

func (x *FriendVO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FriendVO) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FriendVO) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FriendVO) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *FriendVO) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FriendVO) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *FriendVO) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *FriendVO) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *FriendVO) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{1}
}

func (x *AddFriendRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AddFriendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFriendReply) Reset() {
	*x = AddFriendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendReply) ProtoMessage() {}

func (x *AddFriendReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendReply.ProtoReflect.Descriptor instead.
func (*AddFriendReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{2}
}

type GetFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int32 `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *GetFriendRequest) Reset() {
	*x = GetFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequest) ProtoMessage() {}

func (x *GetFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetFriendRequest) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type GetFriendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *FriendVO `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFriendReply) Reset() {
	*x = GetFriendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendReply) ProtoMessage() {}

func (x *GetFriendReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendReply.ProtoReflect.Descriptor instead.
func (*GetFriendReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetFriendReply) GetData() *FriendVO {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFriendRequest) Reset() {
	*x = ListFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendRequest) ProtoMessage() {}

func (x *ListFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendRequest.ProtoReflect.Descriptor instead.
func (*ListFriendRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{5}
}

type ListFriendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FriendVO `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListFriendReply) Reset() {
	*x = ListFriendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendReply) ProtoMessage() {}

func (x *ListFriendReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendReply.ProtoReflect.Descriptor instead.
func (*ListFriendReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListFriendReply) GetData() []*FriendVO {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int32  `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	Remark   string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateFriendRequest) Reset() {
	*x = UpdateFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendRequest) ProtoMessage() {}

func (x *UpdateFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendRequest.ProtoReflect.Descriptor instead.
func (*UpdateFriendRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateFriendRequest) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *UpdateFriendRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateFriendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFriendReply) Reset() {
	*x = UpdateFriendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendReply) ProtoMessage() {}

func (x *UpdateFriendReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendReply.ProtoReflect.Descriptor instead.
func (*UpdateFriendReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{8}
}

type RemoveFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int32 `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *RemoveFriendRequest) Reset() {
	*x = RemoveFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendRequest) ProtoMessage() {}

func (x *RemoveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendRequest.ProtoReflect.Descriptor instead.
func (*RemoveFriendRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveFriendRequest) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type RemoveFriendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFriendReply) Reset() {
	*x = RemoveFriendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_friend_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFriendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendReply) ProtoMessage() {}

func (x *RemoveFriendReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_friend_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendReply.ProtoReflect.Descriptor instead.
func (*RemoveFriendReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_friend_api_proto_rawDescGZIP(), []int{10}
}

var File_chatsvc_v1_friend_api_proto protoreflect.FileDescriptor

var file_chatsvc_v1_friend_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x56, 0x4f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2b, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x56, 0x4f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x56, 0x4f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22,
	0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x09,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x61, 0xba, 0x47, 0x0d, 0x92, 0x02, 0x0a, 0xe5, 0xa5, 0xbd, 0xe5, 0x8f, 0x8b, 0x20, 0x75, 0x69,
	0x64, 0xba, 0x48, 0x4e, 0xba, 0x01, 0x4b, 0x0a, 0x17, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x1a, 0x30, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x20, 0x3f, 0x20, 0x27, 0xe5,
	0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x8c, 0x87, 0xe5, 0xae, 0x9a, 0xe6, 0x9c, 0x89, 0xe6, 0x95,
	0x88, 0xe7, 0x9a, 0x84, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x69, 0x64, 0x27, 0x20, 0x3a, 0x20,
	0x27, 0x27, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x32, 0xc2, 0x04, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x6e, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2f, 0x7b,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73,
	0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x12, 0x7a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x1a, 0x1f, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x2f, 0x7b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a,
	0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x7a, 0x77, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76,
	0x63, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatsvc_v1_friend_api_proto_rawDescOnce sync.Once
	file_chatsvc_v1_friend_api_proto_rawDescData = file_chatsvc_v1_friend_api_proto_rawDesc
)

func file_chatsvc_v1_friend_api_proto_rawDescGZIP() []byte {
	file_chatsvc_v1_friend_api_proto_rawDescOnce.Do(func() {
		file_chatsvc_v1_friend_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatsvc_v1_friend_api_proto_rawDescData)
	})
	return file_chatsvc_v1_friend_api_proto_rawDescData
}

var file_chatsvc_v1_friend_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_chatsvc_v1_friend_api_proto_goTypes = []interface{}{
	(*FriendVO)(nil),            // 0: chatsvc.v1.FriendVO
	(*AddFriendRequest)(nil),    // 1: chatsvc.v1.AddFriendRequest
	(*AddFriendReply)(nil),      // 2: chatsvc.v1.AddFriendReply
	(*GetFriendRequest)(nil),    // 3: chatsvc.v1.GetFriendRequest
	(*GetFriendReply)(nil),      // 4: chatsvc.v1.GetFriendReply
	(*ListFriendRequest)(nil),   // 5: chatsvc.v1.ListFriendRequest
	(*ListFriendReply)(nil),     // 6: chatsvc.v1.ListFriendReply
	(*UpdateFriendRequest)(nil), // 7: chatsvc.v1.UpdateFriendRequest
	(*UpdateFriendReply)(nil),   // 8: chatsvc.v1.UpdateFriendReply
	(*RemoveFriendRequest)(nil), // 9: chatsvc.v1.RemoveFriendRequest
	(*RemoveFriendReply)(nil),   // 10: chatsvc.v1.RemoveFriendReply
}
var file_chatsvc_v1_friend_api_proto_depIdxs = []int32{
	0,  // 0: chatsvc.v1.GetFriendReply.data:type_name -> chatsvc.v1.FriendVO
	0,  // 1: chatsvc.v1.ListFriendReply.data:type_name -> chatsvc.v1.FriendVO
	1,  // 2: chatsvc.v1.FriendService.AddFriend:input_type -> chatsvc.v1.AddFriendRequest
	3,  // 3: chatsvc.v1.FriendService.GetFriend:input_type -> chatsvc.v1.GetFriendRequest
	5,  // 4: chatsvc.v1.FriendService.ListFriend:input_type -> chatsvc.v1.ListFriendRequest
	7,  // 5: chatsvc.v1.FriendService.UpdateFriend:input_type -> chatsvc.v1.UpdateFriendRequest
	9,  // 6: chatsvc.v1.FriendService.RemoveFriend:input_type -> chatsvc.v1.RemoveFriendRequest
	2,  // 7: chatsvc.v1.FriendService.AddFriend:output_type -> chatsvc.v1.AddFriendReply
	4,  // 8: chatsvc.v1.FriendService.GetFriend:output_type -> chatsvc.v1.GetFriendReply
	6,  // 9: chatsvc.v1.FriendService.ListFriend:output_type -> chatsvc.v1.ListFriendReply
	8,  // 10: chatsvc.v1.FriendService.UpdateFriend:output_type -> chatsvc.v1.UpdateFriendReply
	10, // 11: chatsvc.v1.FriendService.RemoveFriend:output_type -> chatsvc.v1.RemoveFriendReply
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_chatsvc_v1_friend_api_proto_init() }
func file_chatsvc_v1_friend_api_proto_init() {
	if File_chatsvc_v1_friend_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chatsvc_v1_friend_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_friend_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFriendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatsvc_v1_friend_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatsvc_v1_friend_api_proto_goTypes,
		DependencyIndexes: file_chatsvc_v1_friend_api_proto_depIdxs,
		MessageInfos:      file_chatsvc_v1_friend_api_proto_msgTypes,
	}.Build()
	File_chatsvc_v1_friend_api_proto = out.File
	file_chatsvc_v1_friend_api_proto_rawDesc = nil
	file_chatsvc_v1_friend_api_proto_goTypes = nil
	file_chatsvc_v1_friend_api_proto_depIdxs = nil
}
