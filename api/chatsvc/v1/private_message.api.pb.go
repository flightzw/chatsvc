// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: chatsvc/v1/private_message.api.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrivateMessageVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendId    int32  `protobuf:"varint,2,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"`
	RecvId    int32  `protobuf:"varint,3,opt,name=recv_id,json=recvId,proto3" json:"recv_id,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Type      int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *PrivateMessageVO) Reset() {
	*x = PrivateMessageVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateMessageVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateMessageVO) ProtoMessage() {}

func (x *PrivateMessageVO) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateMessageVO.ProtoReflect.Descriptor instead.
func (*PrivateMessageVO) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{0}
}

func (x *PrivateMessageVO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrivateMessageVO) GetSendId() int32 {
	if x != nil {
		return x.SendId
	}
	return 0
}

func (x *PrivateMessageVO) GetRecvId() int32 {
	if x != nil {
		return x.RecvId
	}
	return 0
}

func (x *PrivateMessageVO) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PrivateMessageVO) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PrivateMessageVO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PrivateMessageVO) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type SendPrivateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	RecvId  int32  `protobuf:"varint,2,opt,name=recv_id,json=recvId,proto3" json:"recv_id,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SendPrivateMessageRequest) Reset() {
	*x = SendPrivateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPrivateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPrivateMessageRequest) ProtoMessage() {}

func (x *SendPrivateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPrivateMessageRequest.ProtoReflect.Descriptor instead.
func (*SendPrivateMessageRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{1}
}

func (x *SendPrivateMessageRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SendPrivateMessageRequest) GetRecvId() int32 {
	if x != nil {
		return x.RecvId
	}
	return 0
}

func (x *SendPrivateMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendPrivateMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PrivateMessageVO `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendPrivateMessageReply) Reset() {
	*x = SendPrivateMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPrivateMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPrivateMessageReply) ProtoMessage() {}

func (x *SendPrivateMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPrivateMessageReply.ProtoReflect.Descriptor instead.
func (*SendPrivateMessageReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{2}
}

func (x *SendPrivateMessageReply) GetData() *PrivateMessageVO {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecallPrivateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RecallPrivateMessageRequest) Reset() {
	*x = RecallPrivateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallPrivateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallPrivateMessageRequest) ProtoMessage() {}

func (x *RecallPrivateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallPrivateMessageRequest.ProtoReflect.Descriptor instead.
func (*RecallPrivateMessageRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{3}
}

func (x *RecallPrivateMessageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RecallPrivateMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecallPrivateMessageReply) Reset() {
	*x = RecallPrivateMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallPrivateMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallPrivateMessageReply) ProtoMessage() {}

func (x *RecallPrivateMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallPrivateMessageReply.ProtoReflect.Descriptor instead.
func (*RecallPrivateMessageReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{4}
}

type PullOfflineMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartId int32 `protobuf:"varint,1,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
}

func (x *PullOfflineMessageRequest) Reset() {
	*x = PullOfflineMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullOfflineMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullOfflineMessageRequest) ProtoMessage() {}

func (x *PullOfflineMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullOfflineMessageRequest.ProtoReflect.Descriptor instead.
func (*PullOfflineMessageRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{5}
}

func (x *PullOfflineMessageRequest) GetStartId() int32 {
	if x != nil {
		return x.StartId
	}
	return 0
}

type PullOfflineMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PullOfflineMessageReply) Reset() {
	*x = PullOfflineMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullOfflineMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullOfflineMessageReply) ProtoMessage() {}

func (x *PullOfflineMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullOfflineMessageReply.ProtoReflect.Descriptor instead.
func (*PullOfflineMessageReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{6}
}

type ReadedPrivateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int32 `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *ReadedPrivateMessageRequest) Reset() {
	*x = ReadedPrivateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadedPrivateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadedPrivateMessageRequest) ProtoMessage() {}

func (x *ReadedPrivateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadedPrivateMessageRequest.ProtoReflect.Descriptor instead.
func (*ReadedPrivateMessageRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{7}
}

func (x *ReadedPrivateMessageRequest) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type ReadedPrivateMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadedPrivateMessageReply) Reset() {
	*x = ReadedPrivateMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadedPrivateMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadedPrivateMessageReply) ProtoMessage() {}

func (x *ReadedPrivateMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadedPrivateMessageReply.ProtoReflect.Descriptor instead.
func (*ReadedPrivateMessageReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{8}
}

type ListPrivateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	FriendId    int32  `protobuf:"varint,3,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	Keyword     string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	SendDateGte string `protobuf:"bytes,5,opt,name=send_date_gte,json=sendDateGte,proto3" json:"send_date_gte,omitempty"`
	SendDateLte string `protobuf:"bytes,6,opt,name=send_date_lte,json=sendDateLte,proto3" json:"send_date_lte,omitempty"`
}

func (x *ListPrivateMessageRequest) Reset() {
	*x = ListPrivateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrivateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateMessageRequest) ProtoMessage() {}

func (x *ListPrivateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateMessageRequest.ProtoReflect.Descriptor instead.
func (*ListPrivateMessageRequest) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{9}
}

func (x *ListPrivateMessageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPrivateMessageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPrivateMessageRequest) GetFriendId() int32 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *ListPrivateMessageRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListPrivateMessageRequest) GetSendDateGte() string {
	if x != nil {
		return x.SendDateGte
	}
	return ""
}

func (x *ListPrivateMessageRequest) GetSendDateLte() string {
	if x != nil {
		return x.SendDateLte
	}
	return ""
}

type ListPrivateMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*PrivateMessageVO `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPrivateMessageReply) Reset() {
	*x = ListPrivateMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrivateMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateMessageReply) ProtoMessage() {}

func (x *ListPrivateMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chatsvc_v1_private_message_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateMessageReply.ProtoReflect.Descriptor instead.
func (*ListPrivateMessageReply) Descriptor() ([]byte, []int) {
	return file_chatsvc_v1_private_message_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListPrivateMessageReply) GetData() []*PrivateMessageVO {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListPrivateMessageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_chatsvc_v1_private_message_api_proto protoreflect.FileDescriptor

var file_chatsvc_v1_private_message_api_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x10,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfd, 0x02, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x38, 0xba, 0x48, 0x35, 0xba, 0x01, 0x32, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x25, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d, 0x20,
	0x30, 0x20, 0x3f, 0x20, 0x27, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e,
	0x8b, 0xe6, 0x97, 0xa0, 0xe6, 0x95, 0x88, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x40, 0xba, 0x48, 0x3d, 0xba, 0x01, 0x3a, 0x0a, 0x0c, 0x73, 0x65,
	0x6e, 0x64, 0x2e, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x1a, 0x2a, 0x74, 0x68, 0x69, 0x73,
	0x20, 0x3c, 0x3d, 0x20, 0x30, 0x20, 0x3f, 0x20, 0x27, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe6,
	0x8e, 0xa5, 0xe6, 0x94, 0xb6, 0xe8, 0x80, 0x85, 0x69, 0x64, 0xe6, 0x97, 0xa0, 0xe6, 0x95, 0x88,
	0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x64, 0x12, 0xb6,
	0x01, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x9b, 0x01, 0xba, 0x48, 0x97, 0x01, 0xba, 0x01, 0x3c, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x2c, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3d,
	0x3d, 0x20, 0x27, 0x27, 0x20, 0x3f, 0x20, 0x27, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe5, 0x86,
	0x85, 0xe5, 0xae, 0xb9, 0xe4, 0xb8, 0x8d, 0xe5, 0xbe, 0x97, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba,
	0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0xba, 0x01, 0x55, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x45, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x35, 0x31, 0x32, 0x20, 0x3f, 0x20, 0x27, 0xe6, 0xb6,
	0x88, 0xe6, 0x81, 0xaf, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xe9, 0x95, 0xbf, 0xe5, 0xba, 0xa6,
	0xe4, 0xb8, 0x8d, 0xe5, 0xbe, 0x97, 0xe8, 0xb6, 0x85, 0xe8, 0xbf, 0x87, 0x35, 0x31, 0x32, 0xe4,
	0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4d, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x15, 0xba, 0x47, 0x12, 0x92, 0x02, 0x0f, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe8, 0xb5, 0xb7,
	0xe5, 0xa7, 0x8b, 0x20, 0x69, 0x64, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x52,
	0x65, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x09, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x5b, 0xba,
	0x47, 0x0d, 0x92, 0x02, 0x0a, 0xe5, 0xa5, 0xbd, 0xe5, 0x8f, 0x8b, 0x20, 0x75, 0x69, 0x64, 0xba,
	0x48, 0x48, 0xba, 0x01, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x2e, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x1a, 0x31, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3c, 0x3d,
	0x20, 0x30, 0x20, 0x3f, 0x20, 0x27, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x8f, 0x90, 0xe4,
	0xbe, 0x9b, 0xe6, 0x9c, 0x89, 0xe6, 0x95, 0x88, 0xe7, 0x9a, 0x84, 0xe5, 0xa5, 0xbd, 0xe5, 0x8f,
	0x8b, 0x75, 0x69, 0x64, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xc1, 0x03, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x76, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x59, 0xba, 0x47, 0x0d, 0x92, 0x02, 0x0a, 0xe5, 0xa5, 0xbd, 0xe5, 0x8f,
	0x8b, 0x20, 0x75, 0x69, 0x64, 0xba, 0x48, 0x46, 0xba, 0x01, 0x43, 0x0a, 0x0e, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x1a, 0x31, 0x74, 0x68, 0x69,
	0x73, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x20, 0x3f, 0x20, 0x27, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb,
	0xe6, 0x8f, 0x90, 0xe4, 0xbe, 0x9b, 0xe6, 0x9c, 0x89, 0xe6, 0x95, 0x88, 0xe7, 0x9a, 0x84, 0xe5,
	0xa5, 0xbd, 0xe5, 0x8f, 0x8b, 0x75, 0x69, 0x64, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x27, 0x52, 0x08,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x7f, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x65, 0xba, 0x47, 0x0f, 0x92, 0x02,
	0x0c, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xba, 0x48, 0x50,
	0xba, 0x01, 0x4d, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0x3d, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e,
	0x20, 0x31, 0x30, 0x20, 0x3f, 0x20, 0x27, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0xe5, 0x86, 0x85,
	0xe5, 0xae, 0xb9, 0xe4, 0xb8, 0x8d, 0xe5, 0xbe, 0x97, 0xe8, 0xb6, 0x85, 0xe8, 0xbf, 0x87, 0x31,
	0x30, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x27,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe8, 0xb5, 0xb7, 0xe5, 0xa7, 0x8b, 0xe5, 0x8f,
	0x91, 0xe9, 0x80, 0x81, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x47, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xba, 0x47, 0x15, 0x92, 0x02, 0x12, 0xe6, 0x88, 0xaa, 0xe6, 0xad, 0xa2, 0xe5, 0x8f, 0x91, 0xe9,
	0x80, 0x81, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x4c, 0x74, 0x65, 0x22, 0x61, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x80, 0x06, 0x0a, 0x15, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a,
	0x22, 0x21, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x1a, 0x28, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76,
	0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x95, 0x01, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x14, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x1a, 0x23, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x64, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x7a, 0x77, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatsvc_v1_private_message_api_proto_rawDescOnce sync.Once
	file_chatsvc_v1_private_message_api_proto_rawDescData = file_chatsvc_v1_private_message_api_proto_rawDesc
)

func file_chatsvc_v1_private_message_api_proto_rawDescGZIP() []byte {
	file_chatsvc_v1_private_message_api_proto_rawDescOnce.Do(func() {
		file_chatsvc_v1_private_message_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatsvc_v1_private_message_api_proto_rawDescData)
	})
	return file_chatsvc_v1_private_message_api_proto_rawDescData
}

var file_chatsvc_v1_private_message_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_chatsvc_v1_private_message_api_proto_goTypes = []interface{}{
	(*PrivateMessageVO)(nil),            // 0: chatsvc.v1.PrivateMessageVO
	(*SendPrivateMessageRequest)(nil),   // 1: chatsvc.v1.SendPrivateMessageRequest
	(*SendPrivateMessageReply)(nil),     // 2: chatsvc.v1.SendPrivateMessageReply
	(*RecallPrivateMessageRequest)(nil), // 3: chatsvc.v1.RecallPrivateMessageRequest
	(*RecallPrivateMessageReply)(nil),   // 4: chatsvc.v1.RecallPrivateMessageReply
	(*PullOfflineMessageRequest)(nil),   // 5: chatsvc.v1.PullOfflineMessageRequest
	(*PullOfflineMessageReply)(nil),     // 6: chatsvc.v1.PullOfflineMessageReply
	(*ReadedPrivateMessageRequest)(nil), // 7: chatsvc.v1.ReadedPrivateMessageRequest
	(*ReadedPrivateMessageReply)(nil),   // 8: chatsvc.v1.ReadedPrivateMessageReply
	(*ListPrivateMessageRequest)(nil),   // 9: chatsvc.v1.ListPrivateMessageRequest
	(*ListPrivateMessageReply)(nil),     // 10: chatsvc.v1.ListPrivateMessageReply
}
var file_chatsvc_v1_private_message_api_proto_depIdxs = []int32{
	0,  // 0: chatsvc.v1.SendPrivateMessageReply.data:type_name -> chatsvc.v1.PrivateMessageVO
	0,  // 1: chatsvc.v1.ListPrivateMessageReply.data:type_name -> chatsvc.v1.PrivateMessageVO
	1,  // 2: chatsvc.v1.PrivateMessageService.SendPrivateMessage:input_type -> chatsvc.v1.SendPrivateMessageRequest
	3,  // 3: chatsvc.v1.PrivateMessageService.RecallPrivateMessage:input_type -> chatsvc.v1.RecallPrivateMessageRequest
	5,  // 4: chatsvc.v1.PrivateMessageService.PullOfflinePrivateMessage:input_type -> chatsvc.v1.PullOfflineMessageRequest
	7,  // 5: chatsvc.v1.PrivateMessageService.ReadedPrivateMessage:input_type -> chatsvc.v1.ReadedPrivateMessageRequest
	9,  // 6: chatsvc.v1.PrivateMessageService.ListPrivateMessage:input_type -> chatsvc.v1.ListPrivateMessageRequest
	2,  // 7: chatsvc.v1.PrivateMessageService.SendPrivateMessage:output_type -> chatsvc.v1.SendPrivateMessageReply
	4,  // 8: chatsvc.v1.PrivateMessageService.RecallPrivateMessage:output_type -> chatsvc.v1.RecallPrivateMessageReply
	6,  // 9: chatsvc.v1.PrivateMessageService.PullOfflinePrivateMessage:output_type -> chatsvc.v1.PullOfflineMessageReply
	8,  // 10: chatsvc.v1.PrivateMessageService.ReadedPrivateMessage:output_type -> chatsvc.v1.ReadedPrivateMessageReply
	10, // 11: chatsvc.v1.PrivateMessageService.ListPrivateMessage:output_type -> chatsvc.v1.ListPrivateMessageReply
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_chatsvc_v1_private_message_api_proto_init() }
func file_chatsvc_v1_private_message_api_proto_init() {
	if File_chatsvc_v1_private_message_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chatsvc_v1_private_message_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateMessageVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPrivateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPrivateMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecallPrivateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecallPrivateMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullOfflineMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullOfflineMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadedPrivateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadedPrivateMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrivateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatsvc_v1_private_message_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrivateMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatsvc_v1_private_message_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatsvc_v1_private_message_api_proto_goTypes,
		DependencyIndexes: file_chatsvc_v1_private_message_api_proto_depIdxs,
		MessageInfos:      file_chatsvc_v1_private_message_api_proto_msgTypes,
	}.Build()
	File_chatsvc_v1_private_message_api_proto = out.File
	file_chatsvc_v1_private_message_api_proto_rawDesc = nil
	file_chatsvc_v1_private_message_api_proto_goTypes = nil
	file_chatsvc_v1_private_message_api_proto_depIdxs = nil
}
